def determineRepoName() {
    return scm.getUserRemoteConfigs()[0].getUrl().tokenize('/').last().split("\\.")[0]
}

def getTargetEnv() {
  if (env.GIT_BRANCH == "main") {
      return "production"
  } else if (env.GIT_BRANCH == "staging") {
      return "staging"
  } else {
      return ""
  }
}


pipeline {
    agent any

    options {
        timestamps()
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
                    git branch: 'main', credentialsId: 'github', url: 'https://github.com/silazare/jenkins-test.git'
            }
        }

        stage('Version') {
            steps {
                script {
                    sh 'echo' + env.GIT_BRANCH
                    env.APP_VERSION = '0.0.1'
                    sh 'echo ' + env.APP_VERSION
                    determineRepoName()
                    getTargetEnv()
                    sh 'echo test'
                    if (fileExists('package.json')) {
                        env.APP_VERSION = sh(script: 'cat package.json | jq -r .version', returnStdout: true).trim()
                        sh 'echo ' + env.APP_VERSION
                    }
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    if (getTargetEnv() != "" ){
                        sh 'echo build'
                        //sh 'echo build' + determineRepoName() + ':' + env.APP_VERSION + '-' + getTargetEnv()
                     }
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    if (getTargetEnv() != "" ){
                        sh 'echo deploy'
                        //sh 'echo deploy' + determineRepoName() + ':' + env.APP_VERSION + '-' + getTargetEnv()
                    }
                }
            }
        }
    }
}
